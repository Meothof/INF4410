heat_template_version: 2014-10-16

description: >
    launch 2 servers 

parameters:

  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    constraints:
      - custom_constraint: nova.keypair
  flavor:
    type: string
    description: Flavor utilisee par les serveurs
    default: INF4410-mini
  image:
    type: string
    description: Image utilisee pour les serveurs
    default: INF4410-Ubuntu-trusty-mini

  net_id:
    type: string
    label: networks
    default: inf4410-net



resources:
    servers:
        type: OS::Heat::ResourceGroup
        properties:
            count: 2
            resource_def:
                type: OS::Nova::Server
                properties:
                    key_name: { get_param: key_name }
                    image: { get_param: image }
                    flavor: { get_param: flavor }
                    admin_pass: admin
                    user_data_format: RAW
                    networks:
                        - network: { get_param: net_id }
                    user_data:
                        str_replace:
                            template: |
                                #!/bin/bash
                                wget https://raw.githubusercontent.com/houssemmh/INF4410-TP3/master/server.py
                                python server.py &
                            params:
                                param1: 'string'
                        
    mypool:
        type: OS::Neutron::Pool
        properties:
            protocol: HTTP
            monitors: [{get_resource: monitor}]
            subnet_id:  6579eb07-88c3-4707-9c6e-ab90a78cca02
            lb_method: ROUND_ROBIN
            vip:
                protocol_port: 8000

    loadbalancer:
        type: OS::Neutron::LoadBalancer
        properties:
            protocol_port: 8000
            pool_id: {get_resource: mypool}
            members: {get_attr: [servers, refs]}

            
    monitor:
            type: OS::Neutron::HealthMonitor
            properties:
                delay: 8
                timeout: 5
                max_retries: 2
                type: TCP
     
            
outputs:
  server_networks:
    description: The networks of the deployed server
    value: { get_attr: [servers, networks] }
  lb_networks:
    description: The networks of the load balancer server
    value: { get_attr: [mypool, vip, address] }
